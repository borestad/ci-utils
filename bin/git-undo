#!/usr/bin/env bash
# reset environment variables that could interfere with normal usage
unset -v GREP_OPTIONS
# put all utility functions here

# make a temporary file
git_extra_mktemp() {
    mktemp -t "$(basename "$0")".XXXXXXX
}

git_extra_default_branch() {
    local extras_default_branch init_default_branch
    extras_default_branch=$(git config --get git-extras.default-branch)
    init_default_branch=$(git config --get init.defaultBranch)
    if [ -n "$extras_default_branch" ]; then
        echo "$extras_default_branch"
    elif [ -n "$init_default_branch" ]; then
        echo "$init_default_branch"
    else
        echo "main"
    fi
}
#
# check whether current directory is inside a git repository
#

is_git_repo() {
  git rev-parse --show-toplevel > /dev/null 2>&1
  result=$?
  if test $result != 0; then
    >&2 echo 'Not a git repo!'
    exit $result
  fi
}

is_git_repo
#
# check whether current directory contains any git commit
#

has_git_commit() {
  git rev-parse --short HEAD > /dev/null 2>&1
  result=$?
  if test $result != 0; then
    >&2 echo 'Not git commit found!'
    exit $result
  fi
}

has_git_commit

cstr="commits"
ccnt=$(git rev-list --count HEAD)
if [ "$ccnt" -eq 1 ]; then cstr="commit"; fi
parm3=""

function _undo()
{
  type=${1:-soft}
  undo_cnt=${2:-1}
  reset=${3:-""}

  if [ "$undo_cnt" -gt "$ccnt" ]; then
    echo "Only $ccnt $cstr, cannot undo $undo_cnt"
  elif [ "$type" = "hard" ] && [ "$ccnt" -eq "$undo_cnt" ]; then
    echo "Cannot hard undo all commits"
  elif [ "$type" = "soft" ] && [ "$ccnt" -eq 1 ]; then
    git update-ref -d HEAD
  else
    git reset "--$type" "HEAD~$undo_cnt"
  fi
  if [ "$reset" != "" ]; then git reset; fi
}

case "$1" in
  -h)
    cat << EOL
This will erase any changes since your last commit.
If you want to get help info, run "git undo --help" instead.
Do you want to continue? [yN]"
EOL
    read -r res
    case "${res}" in
      "Y" | "y")
        parm1=hard
        parm2=${2:-1}
        ;;
      * )
        exit 0
        ;;
    esac
    ;;
  --hard)
    parm1=hard
    parm2=${2:-1}
    ;;
  -s|--soft)
    parm1=soft
    parm2=${2:-1}
    parm3=reset
    ;;
  "")
    parm1=soft
    parm2=1
    ;;
  *[!0-9]*)
    echo "Invalid parameter: $1"
    exit 1
    ;;
  *)
    parm1=soft
    parm2="$1"
    ;;
esac

if [[ ! $parm2 =~ ^[1-9][0-9]*$ ]]; then
    echo "Invalid undo count: $parm2"
    exit 1
fi

_undo "$parm1" "$parm2" "$parm3"
