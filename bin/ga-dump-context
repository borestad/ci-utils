#!/usr/bin/env bash

dump-context() {
  command -v gron &> /dev/null || (mkdir -p ~/.local/bin &> /dev/null && cd "$_" && wget -q -nv "https://raw.githubusercontent.com/borestad/static-binaries/main/x86_64/bin/gron" && chmod +x gron)

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Event ($(gron $GITHUB_EVENT_PATH | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c "$GITHUB_EVENT_PATH" || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Github Context ($(gron $DEBUG_DIR/github.json | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c $DEBUG_DIR/github.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Job Context ($(gron $DEBUG_DIR/job.json | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c $DEBUG_DIR/job.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Steps Context ($(gron $DEBUG_DIR/steps.json | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c $DEBUG_DIR/steps.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Runner Context ($(gron $DEBUG_DIR/runner.json | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c $DEBUG_DIR/runner.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Strategy Context ($(gron $DEBUG_DIR/strategy.json | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c $DEBUG_DIR/strategy.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"

  TOKEN="dump-context-$RANDOM-$RANDOM-token"
  echo "::group::Matrix Context ($(gron $DEBUG_DIR/matrix.json | wc -l))"
  echo "::stop-commands::$TOKEN"
  gron -c $DEBUG_DIR/matrix.json || true
  echo "::$TOKEN::"
  echo "::endgroup::"


  # Send a friendly ping
  # test -f "$GITHUB_EVENT_PATH" && bash -c """(
  #   REPOSITORY=$(gron -c "$GITHUB_EVENT_PATH" | grep full_name | rg '"(.*?)"' -r '$1' --no-filename --only-matching)
  #   timeout 3s curl -fsS -m 3 --retry 0 --data-raw "$REPOSITORY" https://hc-ping.com/1f50d31e-a019-4428-9102-b0f85db775d8
  # )""" &> /dev/null || true
}

dump-context
